/*
 * generated by Xtext 2.9.1
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGreaterThanParserRuleCall()); }
		ruleGreaterThan
		{ after(grammarAccess.getConditionAccess().getGreaterThanParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethod
entryRuleMethod
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodAccess().getGroup()); }
		(rule__Method__Group__0)
		{ after(grammarAccess.getMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEDouble
entryRuleEDouble
:
{ before(grammarAccess.getEDoubleRule()); }
	 ruleEDouble
{ after(grammarAccess.getEDoubleRule()); } 
	 EOF 
;

// Rule EDouble
ruleEDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEDoubleAccess().getGroup()); }
		(rule__EDouble__Group__0)
		{ after(grammarAccess.getEDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLine
entryRuleLine
:
{ before(grammarAccess.getLineRule()); }
	 ruleLine
{ after(grammarAccess.getLineRule()); } 
	 EOF 
;

// Rule Line
ruleLine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLineAccess().getGroup()); }
		(rule__Line__Group__0)
		{ after(grammarAccess.getLineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStmt
entryRuleIfStmt
:
{ before(grammarAccess.getIfStmtRule()); }
	 ruleIfStmt
{ after(grammarAccess.getIfStmtRule()); } 
	 EOF 
;

// Rule IfStmt
ruleIfStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStmtAccess().getGroup()); }
		(rule__IfStmt__Group__0)
		{ after(grammarAccess.getIfStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableAffect
entryRuleVariableAffect
:
{ before(grammarAccess.getVariableAffectRule()); }
	 ruleVariableAffect
{ after(grammarAccess.getVariableAffectRule()); } 
	 EOF 
;

// Rule VariableAffect
ruleVariableAffect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAffectAccess().getGroup()); }
		(rule__VariableAffect__Group__0)
		{ after(grammarAccess.getVariableAffectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallMethod
entryRuleCallMethod
:
{ before(grammarAccess.getCallMethodRule()); }
	 ruleCallMethod
{ after(grammarAccess.getCallMethodRule()); } 
	 EOF 
;

// Rule CallMethod
ruleCallMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallMethodAccess().getGroup()); }
		(rule__CallMethod__Group__0)
		{ after(grammarAccess.getCallMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMove
entryRuleMove
:
{ before(grammarAccess.getMoveRule()); }
	 ruleMove
{ after(grammarAccess.getMoveRule()); } 
	 EOF 
;

// Rule Move
ruleMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveAccess().getGroup()); }
		(rule__Move__Group__0)
		{ after(grammarAccess.getMoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRotateRight
entryRuleRotateRight
:
{ before(grammarAccess.getRotateRightRule()); }
	 ruleRotateRight
{ after(grammarAccess.getRotateRightRule()); } 
	 EOF 
;

// Rule RotateRight
ruleRotateRight 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRotateRightAccess().getGroup()); }
		(rule__RotateRight__Group__0)
		{ after(grammarAccess.getRotateRightAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRotateLeft
entryRuleRotateLeft
:
{ before(grammarAccess.getRotateLeftRule()); }
	 ruleRotateLeft
{ after(grammarAccess.getRotateLeftRule()); } 
	 EOF 
;

// Rule RotateLeft
ruleRotateLeft 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRotateLeftAccess().getGroup()); }
		(rule__RotateLeft__Group__0)
		{ after(grammarAccess.getRotateLeftAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGreaterThan
entryRuleGreaterThan
:
{ before(grammarAccess.getGreaterThanRule()); }
	 ruleGreaterThan
{ after(grammarAccess.getGreaterThanRule()); } 
	 EOF 
;

// Rule GreaterThan
ruleGreaterThan 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGreaterThanAccess().getGroup()); }
		(rule__GreaterThan__Group__0)
		{ after(grammarAccess.getGreaterThanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstant
entryRuleConstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getGroup()); }
		(rule__Constant__Group__0)
		{ after(grammarAccess.getConstantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableRef
entryRuleVariableRef
:
{ before(grammarAccess.getVariableRefRule()); }
	 ruleVariableRef
{ after(grammarAccess.getVariableRefRule()); } 
	 EOF 
;

// Rule VariableRef
ruleVariableRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableRefAccess().getGroup()); }
		(rule__VariableRef__Group__0)
		{ after(grammarAccess.getVariableRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSum
entryRuleSum
:
{ before(grammarAccess.getSumRule()); }
	 ruleSum
{ after(grammarAccess.getSumRule()); } 
	 EOF 
;

// Rule Sum
ruleSum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumAccess().getGroup()); }
		(rule__Sum__Group__0)
		{ after(grammarAccess.getSumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModulo
entryRuleModulo
:
{ before(grammarAccess.getModuloRule()); }
	 ruleModulo
{ after(grammarAccess.getModuloRule()); } 
	 EOF 
;

// Rule Modulo
ruleModulo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuloAccess().getGroup()); }
		(rule__Modulo__Group__0)
		{ after(grammarAccess.getModuloAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Cardinals
ruleCardinals
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardinalsAccess().getAlternatives()); }
		(rule__Cardinals__Alternatives)
		{ after(grammarAccess.getCardinalsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIfStmtParserRuleCall_0()); }
		ruleIfStmt
		{ after(grammarAccess.getStatementAccess().getIfStmtParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getVariableAffectParserRuleCall_1()); }
		ruleVariableAffect
		{ after(grammarAccess.getStatementAccess().getVariableAffectParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCallMethodParserRuleCall_2()); }
		ruleCallMethod
		{ after(grammarAccess.getStatementAccess().getCallMethodParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getMoveParserRuleCall_3()); }
		ruleMove
		{ after(grammarAccess.getStatementAccess().getMoveParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getRotateRightParserRuleCall_4()); }
		ruleRotateRight
		{ after(grammarAccess.getStatementAccess().getRotateRightParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getRotateLeftParserRuleCall_5()); }
		ruleRotateLeft
		{ after(grammarAccess.getStatementAccess().getRotateLeftParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getConstantParserRuleCall_0()); }
		ruleConstant
		{ after(grammarAccess.getValueAccess().getConstantParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getVariableRefParserRuleCall_1()); }
		ruleVariableRef
		{ after(grammarAccess.getValueAccess().getVariableRefParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getSumParserRuleCall_2()); }
		ruleSum
		{ after(grammarAccess.getValueAccess().getSumParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getModuloParserRuleCall_3()); }
		ruleModulo
		{ after(grammarAccess.getValueAccess().getModuloParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); }
		'E'
		{ after(grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); }
		'e'
		{ after(grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinals__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardinalsAccess().getNORTHEnumLiteralDeclaration_0()); }
		('NORTH')
		{ after(grammarAccess.getCardinalsAccess().getNORTHEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCardinalsAccess().getEASTEnumLiteralDeclaration_1()); }
		('EAST')
		{ after(grammarAccess.getCardinalsAccess().getEASTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCardinalsAccess().getSOUTHEnumLiteralDeclaration_2()); }
		('SOUTH')
		{ after(grammarAccess.getCardinalsAccess().getSOUTHEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCardinalsAccess().getWESTEnumLiteralDeclaration_3()); }
		('WEST')
		{ after(grammarAccess.getCardinalsAccess().getWESTEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getProgramKeyword_0()); }
	'Program'
	{ after(grammarAccess.getProgramAccess().getProgramKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_2()); }
	(rule__Program__Group_2__0)?
	{ after(grammarAccess.getProgramAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_3()); }
	(rule__Program__Group_3__0)?
	{ after(grammarAccess.getProgramAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__4__Impl
	rule__Program__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_4()); }
	(rule__Program__Group_4__0)?
	{ after(grammarAccess.getProgramAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__5__Impl
	rule__Program__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_5()); }
	(rule__Program__Group_5__0)?
	{ after(grammarAccess.getProgramAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__6__Impl
	rule__Program__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getMainMethodKeyword_6()); }
	'mainMethod'
	{ after(grammarAccess.getProgramAccess().getMainMethodKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__7__Impl
	rule__Program__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getMainMethodAssignment_7()); }
	(rule__Program__MainMethodAssignment_7)
	{ after(grammarAccess.getProgramAccess().getMainMethodAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__8__Impl
	rule__Program__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_8()); }
	(rule__Program__Group_8__0)?
	{ after(grammarAccess.getProgramAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__9__Impl
	rule__Program__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_9()); }
	(rule__Program__Group_9__0)?
	{ after(grammarAccess.getProgramAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__10__Impl
	rule__Program__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_10()); }
	(rule__Program__Group_10__0)?
	{ after(grammarAccess.getProgramAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_2__0__Impl
	rule__Program__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getXKeyword_2_0()); }
	'x'
	{ after(grammarAccess.getProgramAccess().getXKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getXAssignment_2_1()); }
	(rule__Program__XAssignment_2_1)
	{ after(grammarAccess.getProgramAccess().getXAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_3__0__Impl
	rule__Program__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getYKeyword_3_0()); }
	'y'
	{ after(grammarAccess.getProgramAccess().getYKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getYAssignment_3_1()); }
	(rule__Program__YAssignment_3_1)
	{ after(grammarAccess.getProgramAccess().getYAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_4__0__Impl
	rule__Program__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getAngleKeyword_4_0()); }
	'angle'
	{ after(grammarAccess.getProgramAccess().getAngleKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getAngleAssignment_4_1()); }
	(rule__Program__AngleAssignment_4_1)
	{ after(grammarAccess.getProgramAccess().getAngleAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_5__0__Impl
	rule__Program__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getDistanceKeyword_5_0()); }
	'distance'
	{ after(grammarAccess.getProgramAccess().getDistanceKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getDistanceAssignment_5_1()); }
	(rule__Program__DistanceAssignment_5_1)
	{ after(grammarAccess.getProgramAccess().getDistanceAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_8__0__Impl
	rule__Program__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getMethodsKeyword_8_0()); }
	'methods'
	{ after(grammarAccess.getProgramAccess().getMethodsKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_8__1__Impl
	rule__Program__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_8_1()); }
	'{'
	{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_8__2__Impl
	rule__Program__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getMethodsAssignment_8_2()); }
	(rule__Program__MethodsAssignment_8_2)
	{ after(grammarAccess.getProgramAccess().getMethodsAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_8__3__Impl
	rule__Program__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_8_3()); }
	(rule__Program__Group_8_3__0)*
	{ after(grammarAccess.getProgramAccess().getGroup_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_8__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_8_4()); }
	'}'
	{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_8_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_8_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_8_3__0__Impl
	rule__Program__Group_8_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getCommaKeyword_8_3_0()); }
	','
	{ after(grammarAccess.getProgramAccess().getCommaKeyword_8_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_8_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getMethodsAssignment_8_3_1()); }
	(rule__Program__MethodsAssignment_8_3_1)
	{ after(grammarAccess.getProgramAccess().getMethodsAssignment_8_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_9__0__Impl
	rule__Program__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getVariablesKeyword_9_0()); }
	'variables'
	{ after(grammarAccess.getProgramAccess().getVariablesKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_9__1__Impl
	rule__Program__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_9_1()); }
	'{'
	{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_9__2__Impl
	rule__Program__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getVariablesAssignment_9_2()); }
	(rule__Program__VariablesAssignment_9_2)
	{ after(grammarAccess.getProgramAccess().getVariablesAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_9__3__Impl
	rule__Program__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_9_3()); }
	(rule__Program__Group_9_3__0)*
	{ after(grammarAccess.getProgramAccess().getGroup_9_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_9__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_9_4()); }
	'}'
	{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_9_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_9_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_9_3__0__Impl
	rule__Program__Group_9_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getCommaKeyword_9_3_0()); }
	','
	{ after(grammarAccess.getProgramAccess().getCommaKeyword_9_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_9_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_9_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getVariablesAssignment_9_3_1()); }
	(rule__Program__VariablesAssignment_9_3_1)
	{ after(grammarAccess.getProgramAccess().getVariablesAssignment_9_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_10__0__Impl
	rule__Program__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLinesKeyword_10_0()); }
	'lines'
	{ after(grammarAccess.getProgramAccess().getLinesKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_10__1__Impl
	rule__Program__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_10_1()); }
	'{'
	{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_10__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_10__2__Impl
	rule__Program__Group_10__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_10__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLinesAssignment_10_2()); }
	(rule__Program__LinesAssignment_10_2)
	{ after(grammarAccess.getProgramAccess().getLinesAssignment_10_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_10__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_10__3__Impl
	rule__Program__Group_10__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_10__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_10_3()); }
	(rule__Program__Group_10_3__0)*
	{ after(grammarAccess.getProgramAccess().getGroup_10_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_10__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_10__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_10__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_10_4()); }
	'}'
	{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_10_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_10_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_10_3__0__Impl
	rule__Program__Group_10_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_10_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getCommaKeyword_10_3_0()); }
	','
	{ after(grammarAccess.getProgramAccess().getCommaKeyword_10_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_10_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_10_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_10_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLinesAssignment_10_3_1()); }
	(rule__Program__LinesAssignment_10_3_1)
	{ after(grammarAccess.getProgramAccess().getLinesAssignment_10_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getMethodKeyword_0()); }
	'Method'
	{ after(grammarAccess.getMethodAccess().getMethodKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getNameAssignment_1()); }
	(rule__Method__NameAssignment_1)
	{ after(grammarAccess.getMethodAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getBlockKeyword_3()); }
	'block'
	{ after(grammarAccess.getMethodAccess().getBlockKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getBlockAssignment_4()); }
	(rule__Method__BlockAssignment_4)
	{ after(grammarAccess.getMethodAccess().getBlockAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariableAction_0()); }
	()
	{ after(grammarAccess.getVariableAccess().getVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariableKeyword_1()); }
	'Variable'
	{ after(grammarAccess.getVariableAccess().getVariableKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_2()); }
	(rule__Variable__NameAssignment_2)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__3__Impl
	rule__Variable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getVariableAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__4__Impl
	rule__Variable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getGroup_4()); }
	(rule__Variable__Group_4__0)?
	{ after(grammarAccess.getVariableAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getVariableAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_4__0__Impl
	rule__Variable__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getValueKeyword_4_0()); }
	'value'
	{ after(grammarAccess.getVariableAccess().getValueKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getValueAssignment_4_1()); }
	(rule__Variable__ValueAssignment_4_1)
	{ after(grammarAccess.getVariableAccess().getValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__0__Impl
	rule__EDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__1__Impl
	rule__EDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
	(RULE_INT)?
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__2__Impl
	rule__EDouble__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__3__Impl
	rule__EDouble__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getGroup_4()); }
	(rule__EDouble__Group_4__0)?
	{ after(grammarAccess.getEDoubleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__0__Impl
	rule__EDouble__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getAlternatives_4_0()); }
	(rule__EDouble__Alternatives_4_0)
	{ after(grammarAccess.getEDoubleAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__1__Impl
	rule__EDouble__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); }
	('-')?
	{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); }
	RULE_INT
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__0__Impl
	rule__Line__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getLineAction_0()); }
	()
	{ after(grammarAccess.getLineAccess().getLineAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__1__Impl
	rule__Line__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getLineKeyword_1()); }
	'Line'
	{ after(grammarAccess.getLineAccess().getLineKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__2__Impl
	rule__Line__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getLineAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__3__Impl
	rule__Line__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getGroup_3()); }
	(rule__Line__Group_3__0)?
	{ after(grammarAccess.getLineAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__4__Impl
	rule__Line__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getGroup_4()); }
	(rule__Line__Group_4__0)?
	{ after(grammarAccess.getLineAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__5__Impl
	rule__Line__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getGroup_5()); }
	(rule__Line__Group_5__0)?
	{ after(grammarAccess.getLineAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__6__Impl
	rule__Line__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getGroup_6()); }
	(rule__Line__Group_6__0)?
	{ after(grammarAccess.getLineAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getLineAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group_3__0__Impl
	rule__Line__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getX1Keyword_3_0()); }
	'x1'
	{ after(grammarAccess.getLineAccess().getX1Keyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getX1Assignment_3_1()); }
	(rule__Line__X1Assignment_3_1)
	{ after(grammarAccess.getLineAccess().getX1Assignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group_4__0__Impl
	rule__Line__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getY1Keyword_4_0()); }
	'y1'
	{ after(grammarAccess.getLineAccess().getY1Keyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getY1Assignment_4_1()); }
	(rule__Line__Y1Assignment_4_1)
	{ after(grammarAccess.getLineAccess().getY1Assignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group_5__0__Impl
	rule__Line__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getX2Keyword_5_0()); }
	'x2'
	{ after(grammarAccess.getLineAccess().getX2Keyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getX2Assignment_5_1()); }
	(rule__Line__X2Assignment_5_1)
	{ after(grammarAccess.getLineAccess().getX2Assignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group_6__0__Impl
	rule__Line__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getY2Keyword_6_0()); }
	'y2'
	{ after(grammarAccess.getLineAccess().getY2Keyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Line__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineAccess().getY2Assignment_6_1()); }
	(rule__Line__Y2Assignment_6_1)
	{ after(grammarAccess.getLineAccess().getY2Assignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
	()
	{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getBlockKeyword_1()); }
	'Block'
	{ after(grammarAccess.getBlockAccess().getBlockKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__3__Impl
	rule__Block__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getGroup_3()); }
	(rule__Block__Group_3__0)?
	{ after(grammarAccess.getBlockAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group_3__0__Impl
	rule__Block__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getStatementsKeyword_3_0()); }
	'statements'
	{ after(grammarAccess.getBlockAccess().getStatementsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group_3__1__Impl
	rule__Block__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group_3__2__Impl
	rule__Block__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getStatementsAssignment_3_2()); }
	(rule__Block__StatementsAssignment_3_2)
	{ after(grammarAccess.getBlockAccess().getStatementsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group_3__3__Impl
	rule__Block__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getGroup_3_3()); }
	(rule__Block__Group_3_3__0)*
	{ after(grammarAccess.getBlockAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3_4()); }
	'}'
	{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group_3_3__0__Impl
	rule__Block__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getCommaKeyword_3_3_0()); }
	','
	{ after(grammarAccess.getBlockAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getStatementsAssignment_3_3_1()); }
	(rule__Block__StatementsAssignment_3_3_1)
	{ after(grammarAccess.getBlockAccess().getStatementsAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__0__Impl
	rule__IfStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
	'If'
	{ after(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__1__Impl
	rule__IfStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getIfStmtAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__2__Impl
	rule__IfStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getThenBranchKeyword_2()); }
	'thenBranch'
	{ after(grammarAccess.getIfStmtAccess().getThenBranchKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__3__Impl
	rule__IfStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getThenBranchAssignment_3()); }
	(rule__IfStmt__ThenBranchAssignment_3)
	{ after(grammarAccess.getIfStmtAccess().getThenBranchAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__4__Impl
	rule__IfStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getGroup_4()); }
	(rule__IfStmt__Group_4__0)?
	{ after(grammarAccess.getIfStmtAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__5__Impl
	rule__IfStmt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getConditionKeyword_5()); }
	'condition'
	{ after(grammarAccess.getIfStmtAccess().getConditionKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__6__Impl
	rule__IfStmt__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getConditionAssignment_6()); }
	(rule__IfStmt__ConditionAssignment_6)
	{ after(grammarAccess.getIfStmtAccess().getConditionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getIfStmtAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_4__0__Impl
	rule__IfStmt__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getElseBranchKeyword_4_0()); }
	'elseBranch'
	{ after(grammarAccess.getIfStmtAccess().getElseBranchKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getElseBranchAssignment_4_1()); }
	(rule__IfStmt__ElseBranchAssignment_4_1)
	{ after(grammarAccess.getIfStmtAccess().getElseBranchAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAffect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableAffect__Group__0__Impl
	rule__VariableAffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAffect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAffectAccess().getVariableKeyword_0()); }
	'variable'
	{ after(grammarAccess.getVariableAffectAccess().getVariableKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAffect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableAffect__Group__1__Impl
	rule__VariableAffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAffect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAffectAccess().getVariableAssignment_1()); }
	(rule__VariableAffect__VariableAssignment_1)
	{ after(grammarAccess.getVariableAffectAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAffect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableAffect__Group__2__Impl
	rule__VariableAffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAffect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAffectAccess().getLessThanSignHyphenMinusKeyword_2()); }
	'<-'
	{ after(grammarAccess.getVariableAffectAccess().getLessThanSignHyphenMinusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAffect__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableAffect__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAffect__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAffectAccess().getValueAssignment_3()); }
	(rule__VariableAffect__ValueAssignment_3)
	{ after(grammarAccess.getVariableAffectAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallMethod__Group__0__Impl
	rule__CallMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallMethodAccess().getCallMethodKeyword_0()); }
	'CallMethod'
	{ after(grammarAccess.getCallMethodAccess().getCallMethodKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallMethod__Group__1__Impl
	rule__CallMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallMethodAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCallMethodAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMethod__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallMethod__Group__2__Impl
	rule__CallMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMethod__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallMethodAccess().getMethodKeyword_2()); }
	'method'
	{ after(grammarAccess.getCallMethodAccess().getMethodKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMethod__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallMethod__Group__3__Impl
	rule__CallMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMethod__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallMethodAccess().getMethodAssignment_3()); }
	(rule__CallMethod__MethodAssignment_3)
	{ after(grammarAccess.getCallMethodAccess().getMethodAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMethod__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallMethod__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMethod__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallMethodAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getCallMethodAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Move__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__0__Impl
	rule__Move__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getMoveAction_0()); }
	()
	{ after(grammarAccess.getMoveAccess().getMoveAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getMoveKeyword_1()); }
	'Move'
	{ after(grammarAccess.getMoveAccess().getMoveKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RotateRight__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateRight__Group__0__Impl
	rule__RotateRight__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateRight__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateRightAccess().getRotateRightAction_0()); }
	()
	{ after(grammarAccess.getRotateRightAccess().getRotateRightAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateRight__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateRight__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateRight__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateRightAccess().getRotateRightKeyword_1()); }
	'RotateRight'
	{ after(grammarAccess.getRotateRightAccess().getRotateRightKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RotateLeft__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateLeft__Group__0__Impl
	rule__RotateLeft__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateLeft__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateLeftAccess().getRotateLeftAction_0()); }
	()
	{ after(grammarAccess.getRotateLeftAccess().getRotateLeftAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateLeft__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateLeft__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateLeft__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateLeftAccess().getRotateLeftKeyword_1()); }
	'RotateLeft'
	{ after(grammarAccess.getRotateLeftAccess().getRotateLeftKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GreaterThan__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__0__Impl
	rule__GreaterThan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getGreaterThanKeyword_0()); }
	'GreaterThan'
	{ after(grammarAccess.getGreaterThanAccess().getGreaterThanKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__1__Impl
	rule__GreaterThan__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getGreaterThanAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__2__Impl
	rule__GreaterThan__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getLeftKeyword_2()); }
	'left'
	{ after(grammarAccess.getGreaterThanAccess().getLeftKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__3__Impl
	rule__GreaterThan__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getLeftAssignment_3()); }
	(rule__GreaterThan__LeftAssignment_3)
	{ after(grammarAccess.getGreaterThanAccess().getLeftAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__4__Impl
	rule__GreaterThan__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getRightKeyword_4()); }
	'right'
	{ after(grammarAccess.getGreaterThanAccess().getRightKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__5__Impl
	rule__GreaterThan__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getRightAssignment_5()); }
	(rule__GreaterThan__RightAssignment_5)
	{ after(grammarAccess.getGreaterThanAccess().getRightAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getGreaterThanAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__0__Impl
	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getConstantAction_0()); }
	()
	{ after(grammarAccess.getConstantAccess().getConstantAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__1__Impl
	rule__Constant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getConstantKeyword_1()); }
	'Constant'
	{ after(grammarAccess.getConstantAccess().getConstantKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__2__Impl
	rule__Constant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getConstantAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__3__Impl
	rule__Constant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getGroup_3()); }
	(rule__Constant__Group_3__0)?
	{ after(grammarAccess.getConstantAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getConstantAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_3__0__Impl
	rule__Constant__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getValueKeyword_3_0()); }
	'value'
	{ after(grammarAccess.getConstantAccess().getValueKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getValueAssignment_3_1()); }
	(rule__Constant__ValueAssignment_3_1)
	{ after(grammarAccess.getConstantAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableRef__Group__0__Impl
	rule__VariableRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableRefAccess().getVariableRefKeyword_0()); }
	'VariableRef'
	{ after(grammarAccess.getVariableRefAccess().getVariableRefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableRef__Group__1__Impl
	rule__VariableRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableRefAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getVariableRefAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableRef__Group__2__Impl
	rule__VariableRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableRefAccess().getVariableKeyword_2()); }
	'variable'
	{ after(grammarAccess.getVariableRefAccess().getVariableKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableRef__Group__3__Impl
	rule__VariableRef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableRefAccess().getVariableAssignment_3()); }
	(rule__VariableRef__VariableAssignment_3)
	{ after(grammarAccess.getVariableRefAccess().getVariableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableRef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableRefAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getVariableRefAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__0__Impl
	rule__Sum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getPlusSignKeyword_0()); }
	'+'
	{ after(grammarAccess.getSumAccess().getPlusSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__1__Impl
	rule__Sum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSumAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__2__Impl
	rule__Sum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getRightAssignment_2()); }
	(rule__Sum__RightAssignment_2)
	{ after(grammarAccess.getSumAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__3__Impl
	rule__Sum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getSumAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__4__Impl
	rule__Sum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getLeftAssignment_4()); }
	(rule__Sum__LeftAssignment_4)
	{ after(grammarAccess.getSumAccess().getLeftAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getSumAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modulo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group__0__Impl
	rule__Modulo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getPercentSignKeyword_0()); }
	'%'
	{ after(grammarAccess.getModuloAccess().getPercentSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group__1__Impl
	rule__Modulo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getModuloAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group__2__Impl
	rule__Modulo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getRightAssignment_2()); }
	(rule__Modulo__RightAssignment_2)
	{ after(grammarAccess.getModuloAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group__3__Impl
	rule__Modulo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getModuloAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group__4__Impl
	rule__Modulo__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getLeftAssignment_4()); }
	(rule__Modulo__LeftAssignment_4)
	{ after(grammarAccess.getModuloAccess().getLeftAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getModuloAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__XAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getXEDoubleParserRuleCall_2_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getProgramAccess().getXEDoubleParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__YAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getYEDoubleParserRuleCall_3_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getProgramAccess().getYEDoubleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__AngleAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getAngleCardinalsEnumRuleCall_4_1_0()); }
		ruleCardinals
		{ after(grammarAccess.getProgramAccess().getAngleCardinalsEnumRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__DistanceAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getDistanceEDoubleParserRuleCall_5_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getProgramAccess().getDistanceEDoubleParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__MainMethodAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getMainMethodMethodCrossReference_7_0()); }
		(
			{ before(grammarAccess.getProgramAccess().getMainMethodMethodEStringParserRuleCall_7_0_1()); }
			ruleEString
			{ after(grammarAccess.getProgramAccess().getMainMethodMethodEStringParserRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getProgramAccess().getMainMethodMethodCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__MethodsAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getMethodsMethodParserRuleCall_8_2_0()); }
		ruleMethod
		{ after(grammarAccess.getProgramAccess().getMethodsMethodParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__MethodsAssignment_8_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getMethodsMethodParserRuleCall_8_3_1_0()); }
		ruleMethod
		{ after(grammarAccess.getProgramAccess().getMethodsMethodParserRuleCall_8_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__VariablesAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getVariablesVariableParserRuleCall_9_2_0()); }
		ruleVariable
		{ after(grammarAccess.getProgramAccess().getVariablesVariableParserRuleCall_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__VariablesAssignment_9_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getVariablesVariableParserRuleCall_9_3_1_0()); }
		ruleVariable
		{ after(grammarAccess.getProgramAccess().getVariablesVariableParserRuleCall_9_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__LinesAssignment_10_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getLinesLineParserRuleCall_10_2_0()); }
		ruleLine
		{ after(grammarAccess.getProgramAccess().getLinesLineParserRuleCall_10_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__LinesAssignment_10_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getLinesLineParserRuleCall_10_3_1_0()); }
		ruleLine
		{ after(grammarAccess.getProgramAccess().getLinesLineParserRuleCall_10_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getMethodAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__BlockAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getBlockBlockParserRuleCall_4_0()); }
		ruleBlock
		{ after(grammarAccess.getMethodAccess().getBlockBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getVariableAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__ValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getValueEDoubleParserRuleCall_4_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getVariableAccess().getValueEDoubleParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__X1Assignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLineAccess().getX1EDoubleParserRuleCall_3_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getLineAccess().getX1EDoubleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Y1Assignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLineAccess().getY1EDoubleParserRuleCall_4_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getLineAccess().getY1EDoubleParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__X2Assignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLineAccess().getX2EDoubleParserRuleCall_5_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getLineAccess().getX2EDoubleParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Y2Assignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLineAccess().getY2EDoubleParserRuleCall_6_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getLineAccess().getY2EDoubleParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_3_2_0()); }
		ruleStatement
		{ after(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementsAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_3_3_1_0()); }
		ruleStatement
		{ after(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ThenBranchAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getThenBranchBlockParserRuleCall_3_0()); }
		ruleBlock
		{ after(grammarAccess.getIfStmtAccess().getThenBranchBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ElseBranchAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getElseBranchBlockParserRuleCall_4_1_0()); }
		ruleBlock
		{ after(grammarAccess.getIfStmtAccess().getElseBranchBlockParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ConditionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getConditionConditionParserRuleCall_6_0()); }
		ruleCondition
		{ after(grammarAccess.getIfStmtAccess().getConditionConditionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAffect__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAffectAccess().getVariableVariableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getVariableAffectAccess().getVariableVariableEStringParserRuleCall_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getVariableAffectAccess().getVariableVariableEStringParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getVariableAffectAccess().getVariableVariableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAffect__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAffectAccess().getValueValueParserRuleCall_3_0()); }
		ruleValue
		{ after(grammarAccess.getVariableAffectAccess().getValueValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMethod__MethodAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallMethodAccess().getMethodMethodCrossReference_3_0()); }
		(
			{ before(grammarAccess.getCallMethodAccess().getMethodMethodEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getCallMethodAccess().getMethodMethodEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getCallMethodAccess().getMethodMethodCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__LeftAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreaterThanAccess().getLeftValueParserRuleCall_3_0()); }
		ruleValue
		{ after(grammarAccess.getGreaterThanAccess().getLeftValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__RightAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreaterThanAccess().getRightValueParserRuleCall_5_0()); }
		ruleValue
		{ after(grammarAccess.getGreaterThanAccess().getRightValueParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getValueEDoubleParserRuleCall_3_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getConstantAccess().getValueEDoubleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__VariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableRefAccess().getVariableVariableCrossReference_3_0()); }
		(
			{ before(grammarAccess.getVariableRefAccess().getVariableVariableEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getVariableRefAccess().getVariableVariableEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getVariableRefAccess().getVariableVariableCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getRightValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getSumAccess().getRightValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__LeftAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getLeftValueParserRuleCall_4_0()); }
		ruleValue
		{ after(grammarAccess.getSumAccess().getLeftValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuloAccess().getRightValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getModuloAccess().getRightValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__LeftAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuloAccess().getLeftValueParserRuleCall_4_0()); }
		ruleValue
		{ after(grammarAccess.getModuloAccess().getLeftValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
